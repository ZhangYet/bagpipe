<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kernel on 一派胡言</title>
    <link>/tags/kernel/</link>
    <description>Recent content in kernel on 一派胡言</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 04 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/kernel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ebpf 札记(3): 一个跟踪 kernel I/O request 生命周期的脚本</title>
      <link>/posts/ebpf-notes-03/</link>
      <pubDate>Wed, 04 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/ebpf-notes-03/</guid>
      <description>上周睡眠一直有问题，没有继续看 samples 里面的代码。写点别的来充数。 现在在追踪 kernel I/O request ，一个 request 被创建出来之后，会在多个函数中传递，直到被释放。 这个过程中它被那些</description>
    </item>
    
    <item>
      <title>ebpf 札记(2): samples/bpf/cpustat(WIP)</title>
      <link>/posts/ebpf-notes-02/</link>
      <pubDate>Sun, 24 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/ebpf-notes-02/</guid>
      <description>linux kernel 源代码下提供了 samples/bpf ，这个目录下有种类繁多的 ebpf 示例，足以作为学习者入门的好教材。 编译 在 samples/bpf/Makefile 中有详细的编译过程。如果缺乏头文件，先执行 make headers_install. 值得注意的是，如</description>
    </item>
    
    <item>
      <title>ebpf 札记(1): bpf_types.h</title>
      <link>/posts/ebpf-notes-01/</link>
      <pubDate>Sat, 16 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/ebpf-notes-01/</guid>
      <description>本文以 5.15 版本内核为例。 概述 include/linux/bpf_types.h 这个头文件有且仅有三种宏指令： BPF_PROG_TYPE; BPF_MAP_TYPE; BPF_LINK_TYPE; 以 BPF_PROG_TYPE 为例，查找它的定义，发现它出现在 include/linux/bpf.h; kernel/bpf/btf.h; kernel/bpf/syscall.c; kernel/bpf/verifier.c; bpf.h 这个文件里面定义了一系列的 bpf_prog_ops, bpf_verifier_ops 和 bpf_map_ops: #define BPF_PROG_TYPE(_id, _name,</description>
    </item>
    
    <item>
      <title>The Linux Kernel Module Programming Guide 读书笔记</title>
      <link>/posts/lkmpg/</link>
      <pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/lkmpg/</guid>
      <description>在 https://sysprog21.github.io/lkmpg/ 上有新版，示例代码至少在 5.15 版本内核上可以成功编译1。 内容梗概 一到五章介绍如何写一个 Hello world module。 第六章介绍如何实现一个字符设备驱动。 实现一个设</description>
    </item>
    
  </channel>
</rss>
